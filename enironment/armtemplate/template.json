{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceName": {
            "type": "string",
            "metadata": {
                "description": "Resource name and prefix for all resources"
            }   
        },
        "secret" : {
            "type": "string",
            "metadata": {
                "description": "The value to store in Key Vault for the web app to display"
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The admin user of the SQL Server"
                }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the admin user of the SQL Server"
            }
        }
    },
    "variables": {
        "linuxPlanName": "[concat(parameters('resourceName'), 'linuxPlan')]",
        "windowsPlanName": "[concat(parameters('resourceName'), 'windowsPlan')]",
        "customersAPI": "[concat(parameters('resourceName'), 'customers')]",
        "vaultName": "[concat(parameters('resourceName'), 'vault')]",
        "secretName": "secret",
        "sqlserverName": "[concat(parameters('resourceName'),'sqlserver')]",
        "databaseName": "insurance"
    },
    "resources": 
    [
        {
            "name": "[variables('sqlserverName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "SqlServer"
            },
            "apiVersion": "2020-02-02-preview",
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "name": "[variables('databaseName')]",
                    "type": "databases",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "Database"
                    },
                    "apiVersion": "2020-02-02-preview",
                    "dependsOn": [
                        "[variables('sqlserverName')]"
                    ],
                    "properties": {
                        "edition": "Basic",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": "1073741824",
                        "requestedServiceObjectiveName": "Basic"
                    }
                },
                {
                    "type": "firewallrules",
                    "apiVersion": "2020-02-02-preview",
                    "dependsOn": [
                        "[variables('sqlserverName')]"
                    ],
                    "location": "[resourceGroup().location]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('linuxPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "sku": {
                "name": "S1",
                "capacity": 1
            },
            "properties": {
                "name": "[variables('linuxPlanName')]"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('customersAPI')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "tags": {
            "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('linuxPlanName'))]": "Resource",
            "displayName": "Website"
            },
            "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms/', variables('linuxPlanName'))]"
            ],
            "kind": "app",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
            "name": "[variables('customersAPI')]",
            "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('linuxPlanName'))]",
            "siteConfig": {
                "appSettings": [
                    {
                        "name": "ConnectionStrings:DefaultConnection",
                        "value": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vaultName'), 'SQLConnectionString')).secretUriWithVersion, ')')]"
                    }
                ]
                }    
            }
        },   
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('vaultName')]",
            "apiVersion": "2016-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    
                ],
                "enabledForTemplateDeployment": true
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('vaultName'), '/add')]",
            "apiVersion": "2018-02-14",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('customersAPI')), '2020-06-01', 'Full').identity.tenantId]",
                        "objectId": "[reference(concat('Microsoft.Web/sites/', variables('customersAPI')), '2020-06-01', 'Full').identity.principalId]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "get",
                                "list"
                            ],
                            "certificates": []
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('customersAPI'))]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('vaultName'), '/SQLConnectionString')]",
            "apiVersion": "2016-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "contentType": "text/plain",
                "value": "[concat('Data Source=tcp:', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(resourceId('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaultName'))]",
                "[variables('sqlserverName')]"
            ]
        }
    ]
  }

