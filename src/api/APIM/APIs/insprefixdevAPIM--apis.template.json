{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "PolicyXMLSasToken": {
      "type": "string"
    },
    "PolicyXMLBaseUrl": {
      "type": "string"
    },
    "serviceUrl": {
      "type": "object"
    },
    "ApiLoggerId": {
      "type": "object"
    }
  },
  "resources": [
    {
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "cust",
        "serviceUrl": "[parameters('serviceUrl').cust]",
        "path": "cust",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "Customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true
                  },
                  "firstName": {
                    "type": "string",
                    "nullable": true
                  },
                  "lastName": {
                    "type": "string",
                    "nullable": true
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "WeatherForecast": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "temperatureC": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "temperatureF": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  },
                  "summary": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "CustomersGet200TextPlainResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "CustomersGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "CustomersGet200TextJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "CustomersPost200TextPlainResponse": {
                "type": "integer",
                "format": "int32"
              },
              "CustomersPost200ApplicationJsonResponse": {
                "type": "integer",
                "format": "int32"
              },
              "CustomersPost200TextJsonResponse": {
                "type": "integer",
                "format": "int32"
              },
              "WeatherForecastGet200TextPlainResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WeatherForecast"
                }
              },
              "WeatherForecastGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WeatherForecast"
                }
              },
              "WeatherForecastGet200TextJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WeatherForecast"
                }
              }
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/603788b63f84fa028ca78059')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "CustomersGet200TextPlainResponse"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "CustomersGet200ApplicationJsonResponse"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "CustomersGet200TextJsonResponse"
              }
            ]
          }
        ],
        "displayName": "/Customers - GET",
        "method": "GET",
        "urlTemplate": "/Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/get-customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust', '603788b63f84fa028ca78059')]"
      ]
    },
    {
      "properties": {
        "displayName": "Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/get-customers/Customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust', 'get-customers')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [
            {
              "name": "id",
              "description": "Format - int32.",
              "type": "integer",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "603788b63f84fa028ca78059",
              "typeName": "Customer"
            },
            {
              "contentType": "text/json",
              "schemaId": "603788b63f84fa028ca78059",
              "typeName": "Customer"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "603788b63f84fa028ca78059",
              "typeName": "Customer"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "CustomersPost200TextPlainResponse"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "CustomersPost200ApplicationJsonResponse"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "CustomersPost200TextJsonResponse"
              }
            ]
          }
        ],
        "displayName": "/Customers - POST",
        "method": "POST",
        "urlTemplate": "/Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/post-customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust', '603788b63f84fa028ca78059')]"
      ]
    },
    {
      "properties": {
        "displayName": "Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/post-customers/Customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust', 'post-customers')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "603788b63f84fa028ca78059",
              "typeName": "Customer"
            },
            {
              "contentType": "text/json",
              "schemaId": "603788b63f84fa028ca78059",
              "typeName": "Customer"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "603788b63f84fa028ca78059",
              "typeName": "Customer"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "Customer"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "Customer"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "Customer"
              }
            ]
          }
        ],
        "displayName": "/Customers - PUT",
        "method": "PUT",
        "urlTemplate": "/Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/put-customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust', '603788b63f84fa028ca78059')]"
      ]
    },
    {
      "properties": {
        "displayName": "Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/put-customers/Customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust', 'put-customers')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "Customer"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "Customer"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "Customer"
              }
            ]
          }
        ],
        "displayName": "/Customers/{id} - GET",
        "method": "GET",
        "urlTemplate": "/Customers/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/get-customers-id')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust', '603788b63f84fa028ca78059')]"
      ]
    },
    {
      "properties": {
        "displayName": "Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/get-customers-id/Customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust', 'get-customers-id')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "WeatherForecastGet200TextPlainResponse"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "WeatherForecastGet200ApplicationJsonResponse"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788b63f84fa028ca78059",
                "typeName": "WeatherForecastGet200TextJsonResponse"
              }
            ]
          }
        ],
        "displayName": "/WeatherForecast - GET",
        "method": "GET",
        "urlTemplate": "/WeatherForecast"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/get-weatherforecast')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust', '603788b63f84fa028ca78059')]"
      ]
    },
    {
      "properties": {
        "displayName": "WeatherForecast"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust/get-weatherforecast/WeatherForecast')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust', 'get-weatherforecast')]"
      ]
    },
    {
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "cust2",
        "serviceUrl": "[parameters('serviceUrl').cust2]",
        "path": "cust2",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "Customer": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": {
                    "type": "string",
                    "nullable": true
                  },
                  "firstName": {
                    "type": "string",
                    "nullable": true
                  },
                  "lastName": {
                    "type": "string",
                    "nullable": true
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "WeatherForecast": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "temperatureC": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "temperatureF": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                  },
                  "summary": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "CustomersGet200TextPlainResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "CustomersGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "CustomersGet200TextJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "CustomersPost200TextPlainResponse": {
                "type": "integer",
                "format": "int32"
              },
              "CustomersPost200ApplicationJsonResponse": {
                "type": "integer",
                "format": "int32"
              },
              "CustomersPost200TextJsonResponse": {
                "type": "integer",
                "format": "int32"
              },
              "WeatherForecastGet200TextPlainResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WeatherForecast"
                }
              },
              "WeatherForecastGet200ApplicationJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WeatherForecast"
                }
              },
              "WeatherForecastGet200TextJsonResponse": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WeatherForecast"
                }
              }
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/603788c53f84fa028ca7805f')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust2')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "CustomersGet200TextPlainResponse"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "CustomersGet200ApplicationJsonResponse"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "CustomersGet200TextJsonResponse"
              }
            ]
          }
        ],
        "displayName": "/Customers - GET",
        "method": "GET",
        "urlTemplate": "/Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/get-customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust2')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust2', '603788c53f84fa028ca7805f')]"
      ]
    },
    {
      "properties": {
        "displayName": "Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/get-customers/Customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust2', 'get-customers')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [
            {
              "name": "id",
              "description": "Format - int32.",
              "type": "integer",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "603788c53f84fa028ca7805f",
              "typeName": "Customer"
            },
            {
              "contentType": "text/json",
              "schemaId": "603788c53f84fa028ca7805f",
              "typeName": "Customer"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "603788c53f84fa028ca7805f",
              "typeName": "Customer"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "CustomersPost200TextPlainResponse"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "CustomersPost200ApplicationJsonResponse"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "CustomersPost200TextJsonResponse"
              }
            ]
          }
        ],
        "displayName": "/Customers - POST",
        "method": "POST",
        "urlTemplate": "/Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/post-customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust2')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust2', '603788c53f84fa028ca7805f')]"
      ]
    },
    {
      "properties": {
        "displayName": "Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/post-customers/Customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust2', 'post-customers')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "schemaId": "603788c53f84fa028ca7805f",
              "typeName": "Customer"
            },
            {
              "contentType": "text/json",
              "schemaId": "603788c53f84fa028ca7805f",
              "typeName": "Customer"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "603788c53f84fa028ca7805f",
              "typeName": "Customer"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "Customer"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "Customer"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "Customer"
              }
            ]
          }
        ],
        "displayName": "/Customers - PUT",
        "method": "PUT",
        "urlTemplate": "/Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/put-customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust2')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust2', '603788c53f84fa028ca7805f')]"
      ]
    },
    {
      "properties": {
        "displayName": "Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/put-customers/Customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust2', 'put-customers')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "Customer"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "Customer"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "Customer"
              }
            ]
          }
        ],
        "displayName": "/Customers/{id} - GET",
        "method": "GET",
        "urlTemplate": "/Customers/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/get-customers-id')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust2')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust2', '603788c53f84fa028ca7805f')]"
      ]
    },
    {
      "properties": {
        "displayName": "Customers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/get-customers-id/Customers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust2', 'get-customers-id')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Success",
            "headers": [],
            "representations": [
              {
                "contentType": "text/plain",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "WeatherForecastGet200TextPlainResponse"
              },
              {
                "contentType": "application/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "WeatherForecastGet200ApplicationJsonResponse"
              },
              {
                "contentType": "text/json",
                "schemaId": "603788c53f84fa028ca7805f",
                "typeName": "WeatherForecastGet200TextJsonResponse"
              }
            ]
          }
        ],
        "displayName": "/WeatherForecast - GET",
        "method": "GET",
        "urlTemplate": "/WeatherForecast"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/get-weatherforecast')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'cust2')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'cust2', '603788c53f84fa028ca7805f')]"
      ]
    },
    {
      "properties": {
        "displayName": "WeatherForecast"
      },
      "name": "[concat(parameters('ApimServiceName'), '/cust2/get-weatherforecast/WeatherForecast')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'cust2', 'get-weatherforecast')]"
      ]
    },
    {
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Echo API",
        "serviceUrl": "[parameters('serviceUrl').echoapi]",
        "path": "echo",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Create resource",
        "method": "POST",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-create-resource-operationPolicy.xml', parameters('PolicyXMLSasToken'))]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'create-resource')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Modify Resource",
        "method": "PUT",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/modify-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Remove resource",
        "method": "DELETE",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/remove-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve header only",
        "method": "HEAD",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-retrieve-header-only-operationPolicy.xml', parameters('PolicyXMLSasToken'))]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-header-only')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
        "request": {
          "queryParameters": [
            {
              "name": "param1",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "type": "string",
              "defaultValue": "sample",
              "required": true,
              "values": [
                "sample"
              ]
            },
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "number",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Returned in all cases.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource",
        "method": "GET",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
        "request": {
          "queryParameters": [
            {
              "name": "param1",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "type": "string",
              "defaultValue": "sample",
              "required": true,
              "values": [
                "sample"
              ]
            },
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource (cached)",
        "method": "GET",
        "urlTemplate": "/resource-cached"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-retrieve-resource-cached-operationPolicy.xml', parameters('PolicyXMLSasToken'))]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-resource-cached')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/starter/echo-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/unlimited/echo-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    }
  ]
}